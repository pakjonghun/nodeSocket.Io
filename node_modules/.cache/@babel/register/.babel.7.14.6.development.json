{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/jeonghunbag/socketio/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jeonghunbag/socketio\",\"filename\":\"/Users/jeonghunbag/socketio/src/app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jeonghunbag/socketio\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/jeonghunbag/socketio/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jeonghunbag/socketio",
      "filename": "/Users/jeonghunbag/socketio/src/app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/jeonghunbag/socketio",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jeonghunbag/socketio/src/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/jeonghunbag/socketio/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jeonghunbag/socketio/src/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "const socket = require('socket.io');\n\nconst express = require('express');\n\nimport Http from 'http';\n\nconst morgan = require('morgan');\n\nconst {\n  join\n} = require('path');\n\nconst app = express();\nconst server = Http.createServer(app);\nconst io = socket(server);\napp.set(\"view engine\", \"ejs\");\napp.set(\"views\", process.cwd() + \"/views\");\napp.use('/static', express.static(join(__dirname, \"assets\")));\napp.use(morgan('tiny'));\nio.on('connection', socket => {\n  console.log('hi');\n  socket.send('hi');\n  socket.on('disconnection', () => {\n    console.log(bye);\n  });\n});\napp.get('/', (req, res) => res.render('index'));\nserver.listen(3000, () => console.log('server is running on 3000'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJzb2NrZXQiLCJyZXF1aXJlIiwiZXhwcmVzcyIsIkh0dHAiLCJtb3JnYW4iLCJqb2luIiwiYXBwIiwic2VydmVyIiwiY3JlYXRlU2VydmVyIiwiaW8iLCJzZXQiLCJwcm9jZXNzIiwiY3dkIiwidXNlIiwic3RhdGljIiwiX19kaXJuYW1lIiwib24iLCJjb25zb2xlIiwibG9nIiwic2VuZCIsImJ5ZSIsImdldCIsInJlcSIsInJlcyIsInJlbmRlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF0Qjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE9BQU9FLElBQVAsTUFBaUIsTUFBakI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHSCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNO0FBQUVJLEVBQUFBO0FBQUYsSUFBV0osT0FBTyxDQUFDLE1BQUQsQ0FBeEI7O0FBQ0EsTUFBTUssR0FBRyxHQUFHSixPQUFPLEVBQW5CO0FBQ0EsTUFBTUssTUFBTSxHQUFHSixJQUFJLENBQUNLLFlBQUwsQ0FBa0JGLEdBQWxCLENBQWY7QUFJQSxNQUFNRyxFQUFFLEdBQUdULE1BQU0sQ0FBQ08sTUFBRCxDQUFqQjtBQUNBRCxHQUFHLENBQUNJLEdBQUosQ0FBUSxhQUFSLEVBQXNCLEtBQXRCO0FBQ0FKLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLE9BQVIsRUFBZ0JDLE9BQU8sQ0FBQ0MsR0FBUixLQUFjLFFBQTlCO0FBQ0FOLEdBQUcsQ0FBQ08sR0FBSixDQUFRLFNBQVIsRUFBa0JYLE9BQU8sQ0FBQ1ksTUFBUixDQUFlVCxJQUFJLENBQUNVLFNBQUQsRUFBVyxRQUFYLENBQW5CLENBQWxCO0FBQ0FULEdBQUcsQ0FBQ08sR0FBSixDQUFRVCxNQUFNLENBQUMsTUFBRCxDQUFkO0FBQ0FLLEVBQUUsQ0FBQ08sRUFBSCxDQUFNLFlBQU4sRUFBb0JoQixNQUFELElBQVU7QUFDekJpQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxJQUFaO0FBQ0FsQixFQUFBQSxNQUFNLENBQUNtQixJQUFQLENBQVksSUFBWjtBQUNBbkIsRUFBQUEsTUFBTSxDQUFDZ0IsRUFBUCxDQUFVLGVBQVYsRUFBMEIsTUFBSTtBQUMxQkMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlFLEdBQVo7QUFDSCxHQUZEO0FBR0gsQ0FORDtBQVNBZCxHQUFHLENBQUNlLEdBQUosQ0FBUSxHQUFSLEVBQVksQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEtBQVdBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLE9BQVgsQ0FBdkI7QUFJQWpCLE1BQU0sQ0FBQ2tCLE1BQVAsQ0FBYyxJQUFkLEVBQW1CLE1BQUlSLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDJCQUFaLENBQXZCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qZW9uZ2h1bmJhZy9zb2NrZXRpby9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc29ja2V0ID0gcmVxdWlyZSgnc29ja2V0LmlvJyk7XG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuaW1wb3J0IEh0dHAgZnJvbSAnaHR0cCc7XG5jb25zdCBtb3JnYW4gPSByZXF1aXJlKCdtb3JnYW4nKTtcbmNvbnN0IHsgam9pbiB9ID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3Qgc2VydmVyID0gSHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKTtcblxuXG5cbmNvbnN0IGlvID0gc29ja2V0KHNlcnZlcik7XG5hcHAuc2V0KFwidmlldyBlbmdpbmVcIixcImVqc1wiKTtcbmFwcC5zZXQoXCJ2aWV3c1wiLHByb2Nlc3MuY3dkKCkrXCIvdmlld3NcIik7XG5hcHAudXNlKCcvc3RhdGljJyxleHByZXNzLnN0YXRpYyhqb2luKF9fZGlybmFtZSxcImFzc2V0c1wiKSkpXG5hcHAudXNlKG1vcmdhbigndGlueScpKTtcbmlvLm9uKCdjb25uZWN0aW9uJywoc29ja2V0KT0+e1xuICAgIGNvbnNvbGUubG9nKCdoaScpO1xuICAgIHNvY2tldC5zZW5kKCdoaScpO1xuICAgIHNvY2tldC5vbignZGlzY29ubmVjdGlvbicsKCk9PntcbiAgICAgICAgY29uc29sZS5sb2coYnllKTtcbiAgICB9KVxufSlcblxuXG5hcHAuZ2V0KCcvJywocmVxLHJlcyk9PnJlcy5yZW5kZXIoJ2luZGV4JykpO1xuXG5cblxuc2VydmVyLmxpc3RlbigzMDAwLCgpPT5jb25zb2xlLmxvZygnc2VydmVyIGlzIHJ1bm5pbmcgb24gMzAwMCcpKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "socket",
        "require",
        "express",
        "Http",
        "morgan",
        "join",
        "app",
        "server",
        "createServer",
        "io",
        "set",
        "process",
        "cwd",
        "use",
        "static",
        "__dirname",
        "on",
        "console",
        "log",
        "send",
        "bye",
        "get",
        "req",
        "res",
        "render",
        "listen"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,OAAOE,IAAP,MAAiB,MAAjB;;AACA,MAAMC,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAWJ,OAAO,CAAC,MAAD,CAAxB;;AACA,MAAMK,GAAG,GAAGJ,OAAO,EAAnB;AACA,MAAMK,MAAM,GAAGJ,IAAI,CAACK,YAAL,CAAkBF,GAAlB,CAAf;AAIA,MAAMG,EAAE,GAAGT,MAAM,CAACO,MAAD,CAAjB;AACAD,GAAG,CAACI,GAAJ,CAAQ,aAAR,EAAsB,KAAtB;AACAJ,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAgBC,OAAO,CAACC,GAAR,KAAc,QAA9B;AACAN,GAAG,CAACO,GAAJ,CAAQ,SAAR,EAAkBX,OAAO,CAACY,MAAR,CAAeT,IAAI,CAACU,SAAD,EAAW,QAAX,CAAnB,CAAlB;AACAT,GAAG,CAACO,GAAJ,CAAQT,MAAM,CAAC,MAAD,CAAd;AACAK,EAAE,CAACO,EAAH,CAAM,YAAN,EAAoBhB,MAAD,IAAU;AACzBiB,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAlB,EAAAA,MAAM,CAACmB,IAAP,CAAY,IAAZ;AACAnB,EAAAA,MAAM,CAACgB,EAAP,CAAU,eAAV,EAA0B,MAAI;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,GAFD;AAGH,CAND;AASAd,GAAG,CAACe,GAAJ,CAAQ,GAAR,EAAY,CAACC,GAAD,EAAKC,GAAL,KAAWA,GAAG,CAACC,MAAJ,CAAW,OAAX,CAAvB;AAIAjB,MAAM,CAACkB,MAAP,CAAc,IAAd,EAAmB,MAAIR,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAvB",
      "sourceRoot": "/Users/jeonghunbag/socketio/src/",
      "sourcesContent": [
        "const socket = require('socket.io');\nconst express = require('express');\nimport Http from 'http';\nconst morgan = require('morgan');\nconst { join } = require('path');\nconst app = express();\nconst server = Http.createServer(app);\n\n\n\nconst io = socket(server);\napp.set(\"view engine\",\"ejs\");\napp.set(\"views\",process.cwd()+\"/views\");\napp.use('/static',express.static(join(__dirname,\"assets\")))\napp.use(morgan('tiny'));\nio.on('connection',(socket)=>{\n    console.log('hi');\n    socket.send('hi');\n    socket.on('disconnection',()=>{\n        console.log(bye);\n    })\n})\n\n\napp.get('/',(req,res)=>res.render('index'));\n\n\n\nserver.listen(3000,()=>console.log('server is running on 3000'));\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1625216314621
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/jeonghunbag/socketio/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jeonghunbag/socketio\",\"filename\":\"/Users/jeonghunbag/socketio/src/app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jeonghunbag/socketio\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/jeonghunbag/socketio/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jeonghunbag/socketio",
      "filename": "/Users/jeonghunbag/socketio/src/app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/jeonghunbag/socketio",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jeonghunbag/socketio/src/app.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jeonghunbag/socketio/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jeonghunbag/socketio/src/",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar port = 4000;\nvar app = (0, _express[\"default\"])(); //http 서버가 연결 socketio 와 express의 연결 역할을 한다.\n//최고 대왕 부모 다 모든걸 다 상속해 주고 있다.\n// const server = Http.createServer(app);\n//io는 모든 이벤트를 알아야 한다. 오로지 연결 만 되 있고 이벤트로 작동한다.\n//이벤트를 커스텀이 가능하다.\n//서버와 클라이 언트는 서로 다른 이벤트를 주고 받고 거기에 따른 통신을 핑퐁처럼 할 수 있다.\n//이때 중요한 것이 connection 이다.\n//https://github.com/socketio 여기 있는 샘플 보고 따라해본다.\n\napp.set(\"view engine\", \"ejs\");\napp.set(\"views\", process.cwd() + \"/src/views\");\napp.use(\"/static\", _express[\"default\"][\"static\"](process.cwd() + \"/assets\"));\napp.get(\"/\", function (req, res) {\n  res.render(\"index\");\n});\nvar server = app.listen(port, function () {\n  console.log(\"hi server\");\n}); //기존에 socketIO.listen(server) 에서 바뀐듯 하다.\n//onconnection 이 시작점이다.\n\nvar io = (0, _socket[\"default\"])(server); //각각의 인자 소켓은 id를 갖는다.\n//커넥션은 오로지 서버가 혹은 클라이언트가 연결을 끊을때만 끊긴다.\n\nio.on(\"connection\", function (socket) {\n  //브로드케스트는 방금 접한 놈빼고 다 이벤트를 보내줌\n  //클라이언트에서 그 이벤트를 듣고 있어야 !!!! 이 이벤트를 받을 수 있다.!!\n  //안듣고 있으면 허공에 외치는 것과 같다.!\n  // socket.broadcast.emit(\"hellow\");\n  //broadcast.emit은\n  //3초후에 연결된 모든 클라이언트에게 헬로우 이벤트를 보낸다.\n  //단 연결된 아이는 빼고!! ㅋㅋ 이게 기본 이론이다 디게 재밋다 ㅋㅋ\n  // setTimeout(a, 3000);\n  //그냥 on 해서 받은 이벤트는 서버에서 만 한번 실행되고 끝\n  //이벤트를 emit 발생시키거나 broadcast 이벤트 발생시킨 막 들어온 클라이 언트빼고 다른 클라이언트에게 이벤트를 전달 하는것\n  //은 딜레이를 줄수 있지만. on 즉 이벤트를 듣는거는 딜레이를 주면 아예 안듣게 된다. 무시됨.\n  // socket.on(\"hellowGuy\", () => {\n  //   console.log(\"클라이언트에게 헬로우 가이라는 이벤트를 받음\");\n  // });\n  // socket.on(\"message\", ({ message }) => {\n  //   console.log(message);\n  //   socket.broadcast.emit(\"newMessage\", { message });\n  // });\n  socket.on(\"hellow\", function (_ref) {\n    var message = _ref.message;\n    socket.broadcast.emit(\"newHellow\", {\n      message: message,\n      nickName: socket.nickName || \"ann\"\n    });\n  });\n  socket.on(\"setName\", function (_ref2) {\n    var nickName = _ref2.nickName;\n    socket.nickName = nickName;\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJwb3J0IiwiYXBwIiwic2V0IiwicHJvY2VzcyIsImN3ZCIsInVzZSIsImV4cHJlc3MiLCJnZXQiLCJyZXEiLCJyZXMiLCJyZW5kZXIiLCJzZXJ2ZXIiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwiaW8iLCJvbiIsInNvY2tldCIsIm1lc3NhZ2UiLCJicm9hZGNhc3QiLCJlbWl0Iiwibmlja05hbWUiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxJQUFJLEdBQUcsSUFBYjtBQUNBLElBQU1DLEdBQUcsR0FBRywwQkFBWixDLENBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QjtBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUSxPQUFSLEVBQWlCQyxPQUFPLENBQUNDLEdBQVIsS0FBZ0IsWUFBakM7QUFDQUgsR0FBRyxDQUFDSSxHQUFKLENBQVEsU0FBUixFQUFtQkMsOEJBQWVILE9BQU8sQ0FBQ0MsR0FBUixLQUFnQixTQUEvQixDQUFuQjtBQUNBSCxHQUFHLENBQUNNLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDekJBLEVBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLE9BQVg7QUFDRCxDQUZEO0FBSUEsSUFBTUMsTUFBTSxHQUFHVixHQUFHLENBQUNXLE1BQUosQ0FBV1osSUFBWCxFQUFpQixZQUFNO0FBQ3BDYSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaO0FBQ0QsQ0FGYyxDQUFmLEMsQ0FJQTtBQUNBOztBQUNBLElBQU1DLEVBQUUsR0FBRyx3QkFBU0osTUFBVCxDQUFYLEMsQ0FFQTtBQUNBOztBQUNBSSxFQUFFLENBQUNDLEVBQUgsQ0FBTSxZQUFOLEVBQW9CLFVBQUNDLE1BQUQsRUFBWTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQUEsRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsUUFBVixFQUFvQixnQkFBaUI7QUFBQSxRQUFkRSxPQUFjLFFBQWRBLE9BQWM7QUFDbkNELElBQUFBLE1BQU0sQ0FBQ0UsU0FBUCxDQUFpQkMsSUFBakIsQ0FBc0IsV0FBdEIsRUFBbUM7QUFDakNGLE1BQUFBLE9BQU8sRUFBUEEsT0FEaUM7QUFFakNHLE1BQUFBLFFBQVEsRUFBRUosTUFBTSxDQUFDSSxRQUFQLElBQW1CO0FBRkksS0FBbkM7QUFJRCxHQUxEO0FBT0FKLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLFNBQVYsRUFBcUIsaUJBQWtCO0FBQUEsUUFBZkssUUFBZSxTQUFmQSxRQUFlO0FBQ3JDSixJQUFBQSxNQUFNLENBQUNJLFFBQVAsR0FBa0JBLFFBQWxCO0FBQ0QsR0FGRDtBQUdELENBOUJEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qZW9uZ2h1bmJhZy9zb2NrZXRpby9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBzb2NrZXRJTyBmcm9tIFwic29ja2V0LmlvXCI7XG5pbXBvcnQgSHR0cCBmcm9tIFwiaHR0cFwiO1xuXG5jb25zdCBwb3J0ID0gNDAwMDtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy9odHRwIOyEnOuyhOqwgCDsl7DqsrAgc29ja2V0aW8g7JmAIGV4cHJlc3PsnZgg7Jew6rKwIOyXre2VoOydhCDtlZzri6QuXG4vL+y1nOqzoCDrjIDsmZUg67aA66qoIOuLpCDrqqjrk6Dqsbgg64ukIOyDgeyGje2VtCDso7zqs6Ag7J6I64ukLlxuLy8gY29uc3Qgc2VydmVyID0gSHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKTtcblxuLy9pb+uKlCDrqqjrk6Ag7J2067Kk7Yq466W8IOyVjOyVhOyVvCDtlZzri6QuIOyYpOuhnOyngCDsl7DqsrAg66eMIOuQmCDsnojqs6Ag7J2067Kk7Yq466GcIOyekeuPme2VnOuLpC5cbi8v7J2067Kk7Yq466W8IOy7pOyKpO2FgOydtCDqsIDriqXtlZjri6QuXG4vL+yEnOuyhOyZgCDtgbTrnbzsnbQg7Ja47Yq464qUIOyEnOuhnCDri6Trpbgg7J2067Kk7Yq466W8IOyjvOqzoCDrsJvqs6Ag6rGw6riw7JeQIOuUsOuluCDthrXsi6DsnYQg7ZWR7ZCB7LKY65+8IO2VoCDsiJgg7J6I64ukLlxuLy/snbTrlYwg7KSR7JqU7ZWcIOqyg+ydtCBjb25uZWN0aW9uIOydtOuLpC5cblxuLy9odHRwczovL2dpdGh1Yi5jb20vc29ja2V0aW8g7Jes6riwIOyeiOuKlCDsg5jtlIwg67O06rOgIOuUsOudvO2VtOuzuOuLpC5cblxuYXBwLnNldChcInZpZXcgZW5naW5lXCIsIFwiZWpzXCIpO1xuYXBwLnNldChcInZpZXdzXCIsIHByb2Nlc3MuY3dkKCkgKyBcIi9zcmMvdmlld3NcIik7XG5hcHAudXNlKFwiL3N0YXRpY1wiLCBleHByZXNzLnN0YXRpYyhwcm9jZXNzLmN3ZCgpICsgXCIvYXNzZXRzXCIpKTtcbmFwcC5nZXQoXCIvXCIsIChyZXEsIHJlcykgPT4ge1xuICByZXMucmVuZGVyKFwiaW5kZXhcIik7XG59KTtcblxuY29uc3Qgc2VydmVyID0gYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiaGkgc2VydmVyXCIpO1xufSk7XG5cbi8v6riw7KG07JeQIHNvY2tldElPLmxpc3RlbihzZXJ2ZXIpIOyXkOyEnCDrsJTrgJDrk68g7ZWY64ukLlxuLy9vbmNvbm5lY3Rpb24g7J20IOyLnOyekeygkOydtOuLpC5cbmNvbnN0IGlvID0gc29ja2V0SU8oc2VydmVyKTtcblxuLy/qsIHqsIHsnZgg7J247J6QIOyGjOy8k+ydgCBpZOulvCDqsJbripTri6QuXG4vL+y7pOuEpeyFmOydgCDsmKTroZzsp4Ag7ISc67KE6rCAIO2YueydgCDtgbTrnbzsnbTslrjtirjqsIAg7Jew6rKw7J2EIOuBiuydhOuVjOunjCDrgYrquLTri6QuXG5pby5vbihcImNvbm5lY3Rpb25cIiwgKHNvY2tldCkgPT4ge1xuICAvL+u4jOuhnOuTnOy8gOyKpO2KuOuKlCDrsKnquIgg7KCR7ZWcIOuGiOu5vOqzoCDri6Qg7J2067Kk7Yq466W8IOuztOuCtOykjFxuICAvL+2BtOudvOydtOyWuO2KuOyXkOyEnCDqt7gg7J2067Kk7Yq466W8IOuTo+qzoCDsnojslrTslbwgISEhISDsnbQg7J2067Kk7Yq466W8IOuwm+ydhCDsiJgg7J6I64ukLiEhXG4gIC8v7JWI65Oj6rOgIOyeiOycvOuptCDtl4jqs7Xsl5Ag7Jm47LmY64qUIOqyg+qzvCDqsJnri6QuIVxuICAvLyBzb2NrZXQuYnJvYWRjYXN0LmVtaXQoXCJoZWxsb3dcIik7XG4gIC8vYnJvYWRjYXN0LmVtaXTsnYBcbiAgLy8z7LSI7ZuE7JeQIOyXsOqysOuQnCDrqqjrk6Ag7YG065287J207Ja47Yq47JeQ6rKMIO2XrOuhnOyasCDsnbTrsqTtirjrpbwg67O064K464ukLlxuICAvL+uLqCDsl7DqsrDrkJwg7JWE7J2064qUIOu5vOqzoCEhIOOFi+OFiyDsnbTqsowg6riw67O4IOydtOuhoOydtOuLpCDrlJTqsowg7J6s67CL64ukIOOFi+OFi1xuICAvLyBzZXRUaW1lb3V0KGEsIDMwMDApO1xuICAvL+q3uOuDpSBvbiDtlbTshJwg67Cb7J2AIOydtOuypO2KuOuKlCDshJzrsoTsl5DshJwg66eMIO2VnOuyiCDsi6TtlonrkJjqs6Ag64GdXG4gIC8v7J2067Kk7Yq466W8IGVtaXQg67Cc7IOd7Iuc7YKk6rGw64KYIGJyb2FkY2FzdCDsnbTrsqTtirgg67Cc7IOd7Iuc7YKoIOuniSDrk6TslrTsmKgg7YG065287J20IOyWuO2KuOu5vOqzoCDri6Trpbgg7YG065287J207Ja47Yq47JeQ6rKMIOydtOuypO2KuOulvCDsoITri6wg7ZWY64qU6rKDXG4gIC8v7J2AIOuUnOugiOydtOulvCDspITsiJgg7J6I7KeA66eMLiBvbiDspokg7J2067Kk7Yq466W8IOuTo+uKlOqxsOuKlCDrlJzroIjsnbTrpbwg7KO866m0IOyVhOyYiCDslYjrk6Pqsowg65Cc64ukLiDrrLTsi5zrkKguXG4gIC8vIHNvY2tldC5vbihcImhlbGxvd0d1eVwiLCAoKSA9PiB7XG4gIC8vICAgY29uc29sZS5sb2coXCLtgbTrnbzsnbTslrjtirjsl5Dqsowg7Zes66Gc7JqwIOqwgOydtOudvOuKlCDsnbTrsqTtirjrpbwg67Cb7J2MXCIpO1xuICAvLyB9KTtcbiAgLy8gc29ja2V0Lm9uKFwibWVzc2FnZVwiLCAoeyBtZXNzYWdlIH0pID0+IHtcbiAgLy8gICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcbiAgLy8gICBzb2NrZXQuYnJvYWRjYXN0LmVtaXQoXCJuZXdNZXNzYWdlXCIsIHsgbWVzc2FnZSB9KTtcbiAgLy8gfSk7XG5cbiAgc29ja2V0Lm9uKFwiaGVsbG93XCIsICh7IG1lc3NhZ2UgfSkgPT4ge1xuICAgIHNvY2tldC5icm9hZGNhc3QuZW1pdChcIm5ld0hlbGxvd1wiLCB7XG4gICAgICBtZXNzYWdlLFxuICAgICAgbmlja05hbWU6IHNvY2tldC5uaWNrTmFtZSB8fCBcImFublwiLFxuICAgIH0pO1xuICB9KTtcblxuICBzb2NrZXQub24oXCJzZXROYW1lXCIsICh7IG5pY2tOYW1lIH0pID0+IHtcbiAgICBzb2NrZXQubmlja05hbWUgPSBuaWNrTmFtZTtcbiAgfSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "port",
        "app",
        "set",
        "process",
        "cwd",
        "use",
        "express",
        "get",
        "req",
        "res",
        "render",
        "server",
        "listen",
        "console",
        "log",
        "io",
        "on",
        "socket",
        "message",
        "broadcast",
        "emit",
        "nickName"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,IAAI,GAAG,IAAb;AACA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,OAAO,CAACC,GAAR,KAAgB,YAAjC;AACAH,GAAG,CAACI,GAAJ,CAAQ,SAAR,EAAmBC,8BAAeH,OAAO,CAACC,GAAR,KAAgB,SAA/B,CAAnB;AACAH,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACD,CAFD;AAIA,IAAMC,MAAM,GAAGV,GAAG,CAACW,MAAJ,CAAWZ,IAAX,EAAiB,YAAM;AACpCa,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,CAFc,CAAf,C,CAIA;AACA;;AACA,IAAMC,EAAE,GAAG,wBAASJ,MAAT,CAAX,C,CAEA;AACA;;AACAI,EAAE,CAACC,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD,EAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAAA,MAAM,CAACD,EAAP,CAAU,QAAV,EAAoB,gBAAiB;AAAA,QAAdE,OAAc,QAAdA,OAAc;AACnCD,IAAAA,MAAM,CAACE,SAAP,CAAiBC,IAAjB,CAAsB,WAAtB,EAAmC;AACjCF,MAAAA,OAAO,EAAPA,OADiC;AAEjCG,MAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAAP,IAAmB;AAFI,KAAnC;AAID,GALD;AAOAJ,EAAAA,MAAM,CAACD,EAAP,CAAU,SAAV,EAAqB,iBAAkB;AAAA,QAAfK,QAAe,SAAfA,QAAe;AACrCJ,IAAAA,MAAM,CAACI,QAAP,GAAkBA,QAAlB;AACD,GAFD;AAGD,CA9BD",
      "sourceRoot": "/Users/jeonghunbag/socketio/src/",
      "sourcesContent": [
        "import express from \"express\";\nimport socketIO from \"socket.io\";\nimport Http from \"http\";\n\nconst port = 4000;\nconst app = express();\n\n//http 서버가 연결 socketio 와 express의 연결 역할을 한다.\n//최고 대왕 부모 다 모든걸 다 상속해 주고 있다.\n// const server = Http.createServer(app);\n\n//io는 모든 이벤트를 알아야 한다. 오로지 연결 만 되 있고 이벤트로 작동한다.\n//이벤트를 커스텀이 가능하다.\n//서버와 클라이 언트는 서로 다른 이벤트를 주고 받고 거기에 따른 통신을 핑퐁처럼 할 수 있다.\n//이때 중요한 것이 connection 이다.\n\n//https://github.com/socketio 여기 있는 샘플 보고 따라해본다.\n\napp.set(\"view engine\", \"ejs\");\napp.set(\"views\", process.cwd() + \"/src/views\");\napp.use(\"/static\", express.static(process.cwd() + \"/assets\"));\napp.get(\"/\", (req, res) => {\n  res.render(\"index\");\n});\n\nconst server = app.listen(port, () => {\n  console.log(\"hi server\");\n});\n\n//기존에 socketIO.listen(server) 에서 바뀐듯 하다.\n//onconnection 이 시작점이다.\nconst io = socketIO(server);\n\n//각각의 인자 소켓은 id를 갖는다.\n//커넥션은 오로지 서버가 혹은 클라이언트가 연결을 끊을때만 끊긴다.\nio.on(\"connection\", (socket) => {\n  //브로드케스트는 방금 접한 놈빼고 다 이벤트를 보내줌\n  //클라이언트에서 그 이벤트를 듣고 있어야 !!!! 이 이벤트를 받을 수 있다.!!\n  //안듣고 있으면 허공에 외치는 것과 같다.!\n  // socket.broadcast.emit(\"hellow\");\n  //broadcast.emit은\n  //3초후에 연결된 모든 클라이언트에게 헬로우 이벤트를 보낸다.\n  //단 연결된 아이는 빼고!! ㅋㅋ 이게 기본 이론이다 디게 재밋다 ㅋㅋ\n  // setTimeout(a, 3000);\n  //그냥 on 해서 받은 이벤트는 서버에서 만 한번 실행되고 끝\n  //이벤트를 emit 발생시키거나 broadcast 이벤트 발생시킨 막 들어온 클라이 언트빼고 다른 클라이언트에게 이벤트를 전달 하는것\n  //은 딜레이를 줄수 있지만. on 즉 이벤트를 듣는거는 딜레이를 주면 아예 안듣게 된다. 무시됨.\n  // socket.on(\"hellowGuy\", () => {\n  //   console.log(\"클라이언트에게 헬로우 가이라는 이벤트를 받음\");\n  // });\n  // socket.on(\"message\", ({ message }) => {\n  //   console.log(message);\n  //   socket.broadcast.emit(\"newMessage\", { message });\n  // });\n\n  socket.on(\"hellow\", ({ message }) => {\n    socket.broadcast.emit(\"newHellow\", {\n      message,\n      nickName: socket.nickName || \"ann\",\n    });\n  });\n\n  socket.on(\"setName\", ({ nickName }) => {\n    socket.nickName = nickName;\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1625231337358
  }
}